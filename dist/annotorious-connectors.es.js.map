{"version":3,"file":"annotorious-connectors.es.js","sources":["../src/model/w3c/W3CRelationAnnotation.ts","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/parse.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/v35.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/uuid/dist/esm-browser/v5.js","../src/model/ConnectionAnnotation.ts","../src/model/w3c/W3CRelationFormatAdapter.ts","../node_modules/svelte/src/runtime/internal/utils.js","../node_modules/svelte/src/runtime/internal/dom.js","../node_modules/svelte/src/runtime/internal/lifecycle.js","../node_modules/svelte/src/runtime/internal/scheduler.js","../node_modules/svelte/src/runtime/internal/transitions.js","../node_modules/svelte/src/runtime/internal/each.js","../node_modules/svelte/src/runtime/internal/Component.js","../node_modules/svelte/src/shared/version.js","../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../node_modules/svg-round-corners/lib/utils.js","../node_modules/svg-round-corners/lib/index.js","../src/layout.ts","../src/components/ConnectorLayer/emphasis/EmphasisEllipse.svelte","../src/components/ConnectorLayer/emphasis/EmphasisPolygon.svelte","../src/components/ConnectorLayer/emphasis/EmphasisRectangle.svelte","../src/components/ConnectorLayer/emphasis/Emphasis.svelte","../src/components/ConnectorLayer/Connector.svelte","../src/components/ConnectorLayer/RubberbandConnector.svelte","../src/components/ConnectorLayer/ConnectorLayer.svelte","../src/state/ConnectionGraph.ts","../src/connectorsPlugin.ts","../src/components/OSDConnectorLayer/OSDSVGLayer.svelte","../src/components/OSDConnectorLayer/OSDConnectorLayer.svelte","../src/osdConnectorsPlugin.ts"],"sourcesContent":["import type { W3CAnnotation } from '@annotorious/annotorious';\n\nexport const isW3CRelationLinkAnnotation = (arg: any): arg is W3CRelationLinkAnnotation =>\n  arg.motivation !== undefined && \n  arg.motivation === 'linking' &&\n  arg.body !== undefined && \n  arg.target !== undefined &&\n  typeof arg.body === 'string' && \n  typeof arg.target === 'string';\n\nexport const isW3CRelationMetaAnnotation = (arg: any): arg is W3CRelationMetaAnnotation =>\n  (arg.motivation === undefined || arg.motivation === 'tagging') &&\n   typeof arg.target === 'string';\n\nexport interface W3CRelationLinkAnnotation extends Omit<W3CAnnotation, 'body'> {\n\n  motivation: 'linking';\n\n  body: string;\n\n  target: string;\n\n}\n\nexport interface W3CRelationMetaAnnotation extends Omit<W3CAnnotation, 'target'> {\n\n  motivation?: 'tagging',\n\n  target: string;\n\n}\n\n\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;\n","import REGEX from './regex.js';\nfunction validate(uuid) {\n    return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;\n","import validate from './validate.js';\nfunction parse(uuid) {\n    if (!validate(uuid)) {\n        throw TypeError('Invalid UUID');\n    }\n    let v;\n    return Uint8Array.of((v = parseInt(uuid.slice(0, 8), 16)) >>> 24, (v >>> 16) & 0xff, (v >>> 8) & 0xff, v & 0xff, (v = parseInt(uuid.slice(9, 13), 16)) >>> 8, v & 0xff, (v = parseInt(uuid.slice(14, 18), 16)) >>> 8, v & 0xff, (v = parseInt(uuid.slice(19, 23), 16)) >>> 8, v & 0xff, ((v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000) & 0xff, (v / 0x100000000) & 0xff, (v >>> 24) & 0xff, (v >>> 16) & 0xff, (v >>> 8) & 0xff, v & 0xff);\n}\nexport default parse;\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","import parse from './parse.js';\nimport { unsafeStringify } from './stringify.js';\nexport function stringToBytes(str) {\n    str = unescape(encodeURIComponent(str));\n    const bytes = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; ++i) {\n        bytes[i] = str.charCodeAt(i);\n    }\n    return bytes;\n}\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(version, hash, value, namespace, buf, offset) {\n    const valueBytes = typeof value === 'string' ? stringToBytes(value) : value;\n    const namespaceBytes = typeof namespace === 'string' ? parse(namespace) : namespace;\n    if (typeof namespace === 'string') {\n        namespace = parse(namespace);\n    }\n    if (namespace?.length !== 16) {\n        throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    }\n    let bytes = new Uint8Array(16 + valueBytes.length);\n    bytes.set(namespaceBytes);\n    bytes.set(valueBytes, namespaceBytes.length);\n    bytes = hash(bytes);\n    bytes[6] = (bytes[6] & 0x0f) | version;\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = bytes[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(bytes);\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","function f(s, x, y, z) {\n    switch (s) {\n        case 0:\n            return (x & y) ^ (~x & z);\n        case 1:\n            return x ^ y ^ z;\n        case 2:\n            return (x & y) ^ (x & z) ^ (y & z);\n        case 3:\n            return x ^ y ^ z;\n    }\n}\nfunction ROTL(x, n) {\n    return (x << n) | (x >>> (32 - n));\n}\nfunction sha1(bytes) {\n    const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n    const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n    const newBytes = new Uint8Array(bytes.length + 1);\n    newBytes.set(bytes);\n    newBytes[bytes.length] = 0x80;\n    bytes = newBytes;\n    const l = bytes.length / 4 + 2;\n    const N = Math.ceil(l / 16);\n    const M = new Array(N);\n    for (let i = 0; i < N; ++i) {\n        const arr = new Uint32Array(16);\n        for (let j = 0; j < 16; ++j) {\n            arr[j] =\n                (bytes[i * 64 + j * 4] << 24) |\n                    (bytes[i * 64 + j * 4 + 1] << 16) |\n                    (bytes[i * 64 + j * 4 + 2] << 8) |\n                    bytes[i * 64 + j * 4 + 3];\n        }\n        M[i] = arr;\n    }\n    M[N - 1][14] = ((bytes.length - 1) * 8) / Math.pow(2, 32);\n    M[N - 1][14] = Math.floor(M[N - 1][14]);\n    M[N - 1][15] = ((bytes.length - 1) * 8) & 0xffffffff;\n    for (let i = 0; i < N; ++i) {\n        const W = new Uint32Array(80);\n        for (let t = 0; t < 16; ++t) {\n            W[t] = M[i][t];\n        }\n        for (let t = 16; t < 80; ++t) {\n            W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n        }\n        let a = H[0];\n        let b = H[1];\n        let c = H[2];\n        let d = H[3];\n        let e = H[4];\n        for (let t = 0; t < 80; ++t) {\n            const s = Math.floor(t / 20);\n            const T = (ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t]) >>> 0;\n            e = d;\n            d = c;\n            c = ROTL(b, 30) >>> 0;\n            b = a;\n            a = T;\n        }\n        H[0] = (H[0] + a) >>> 0;\n        H[1] = (H[1] + b) >>> 0;\n        H[2] = (H[2] + c) >>> 0;\n        H[3] = (H[3] + d) >>> 0;\n        H[4] = (H[4] + e) >>> 0;\n    }\n    return Uint8Array.of(H[0] >> 24, H[0] >> 16, H[0] >> 8, H[0], H[1] >> 24, H[1] >> 16, H[1] >> 8, H[1], H[2] >> 24, H[2] >> 16, H[2] >> 8, H[2], H[3] >> 24, H[3] >> 16, H[3] >> 8, H[3], H[4] >> 24, H[4] >> 16, H[4] >> 8, H[4]);\n}\nexport default sha1;\n","import sha1 from './sha1.js';\nimport v35, { DNS, URL } from './v35.js';\nexport { DNS, URL } from './v35.js';\nfunction v5(value, namespace, buf, offset) {\n    return v35(0x50, sha1, value, namespace, buf, offset);\n}\nv5.DNS = DNS;\nv5.URL = URL;\nexport default v5;\n","import type { Annotation, AnnotationTarget } from '@annotorious/annotorious';\n\nexport const isConnectionAnnotation = <T extends Annotation>(annotation: T | ConnectionAnnotation): annotation is ConnectionAnnotation =>\n  (annotation as ConnectionAnnotation).motivation !== undefined &&\n  (annotation as ConnectionAnnotation).motivation === 'linking';\n\nexport interface ConnectionAnnotation extends Annotation {\n\n  motivation: 'linking';\n\n  target: ConnectionAnnotationTarget;\n\n}\n\nexport interface ConnectionAnnotationTarget extends AnnotationTarget {\n\n  selector: {\n\n    from: string;\n\n    to: string;  \n  }\n\n}\n","import { v5 as uuidv5 } from 'uuid';\nimport { W3CImageFormat } from '@annotorious/annotorious';\nimport { isConnectionAnnotation, type ConnectionAnnotation } from '../ConnectionAnnotation';\nimport { isW3CRelationLinkAnnotation, isW3CRelationMetaAnnotation } from './W3CRelationAnnotation';\nimport type { W3CRelationLinkAnnotation, W3CRelationMetaAnnotation } from './W3CRelationAnnotation';\nimport type { \n  FormatAdapter, \n  ImageAnnotation, \n  ParseResult, \n  W3CAnnotationBody, \n  W3CImageAnnotation, \n  W3CImageFormatAdapter, \n  W3CImageFormatAdapterOpts\n} from '@annotorious/openseadragon';\n\n// Shorthand \ntype W3CAnnotationOrRelation = \n  W3CImageAnnotation | W3CRelationLinkAnnotation | [W3CRelationLinkAnnotation, W3CRelationMetaAnnotation];\n\nexport type W3CRelationFormatAdapter = FormatAdapter<\n  // Internal model\n  ImageAnnotation | ConnectionAnnotation, \n  // Serialized to W3C\n  W3CAnnotationOrRelation>;\n\nexport const W3CImageRelationFormat = (\n  source: string,\n  opts: W3CImageFormatAdapterOpts = { strict: true, invertY: false }\n): W3CRelationFormatAdapter => {\n  const imageAdapter = W3CImageFormat(source, {...opts, strict: false });\n\n  const parse = (serialized: W3CAnnotationOrRelation) =>\n    parseW3C(serialized, imageAdapter);\n\n  const parseAll = (serialized: (W3CImageAnnotation | W3CRelationLinkAnnotation | W3CRelationMetaAnnotation)[]) => {\n    const metaAnnotations = serialized.filter(a => \n      isW3CRelationMetaAnnotation(a)) as W3CRelationMetaAnnotation[];\n\n    const otherAnnotations = serialized.filter(a => \n      !isW3CRelationMetaAnnotation(a)) as (W3CImageAnnotation | W3CRelationLinkAnnotation)[];\n\n    // Pair a link annotation with its meta annotation, if possible\n    const pair = (link: W3CRelationLinkAnnotation): W3CRelationLinkAnnotation | [W3CRelationLinkAnnotation, W3CRelationMetaAnnotation] => {\n      const meta = metaAnnotations.find(a => a.target === link.id);\n      return meta ? [link, meta] : link;\n    } \n\n    return otherAnnotations.reduce((result, next) => {\n      const { parsed, error } = isW3CRelationLinkAnnotation(next)\n        ? parse(pair(next))\n        : parse(next);\n\n      return error ? {\n        parsed: result.parsed,\n        failed: [...result.failed, next ]\n      } : parsed ? {\n        parsed: [...result.parsed, parsed ],\n        failed: result.failed\n      } : {\n        ...result\n      }\n    }, { parsed: [] as (ImageAnnotation | ConnectionAnnotation)[], failed: [] as any[]});\n  }\n\n  const serialize = (annotation: ImageAnnotation | ConnectionAnnotation) =>\n    serializeW3C(annotation, imageAdapter);\n\n  return { parse, parseAll, serialize }\n}\n\nexport const parseW3C = (\n  arg: W3CAnnotationOrRelation,\n  imageAdapter: W3CImageFormatAdapter \n): ParseResult<ImageAnnotation | ConnectionAnnotation> => {\n\n  const parseConnection = (arg: W3CRelationLinkAnnotation, meta?: W3CRelationMetaAnnotation) => {\n    const { id, body, target } = arg;\n\n    const parsed: ConnectionAnnotation = {\n      id,\n      motivation: 'linking',\n      bodies: meta \n        ? Array.isArray(meta.body) ? meta.body : [meta.body]\n        : [],\n      target: {\n        annotation: id,\n        selector: {\n          from: target,\n          to: body\n        }\n      }\n    };\n\n    return parsed;\n  };\n\n  if (Array.isArray(arg)) {\n    const [link, meta] = arg;\n    const parsed = parseConnection(link, meta);\n    return { parsed };\n  } else if (isW3CRelationLinkAnnotation(arg)) {\n    const parsed = parseConnection(arg);\n    return { parsed };\n  } else {\n    return imageAdapter.parse(arg)\n  }\n}\n\nexport const serializeW3C = (\n  annotation: ImageAnnotation | ConnectionAnnotation, \n  imageAdapter: W3CImageFormatAdapter\n): W3CImageAnnotation | W3CRelationLinkAnnotation | [W3CRelationLinkAnnotation, W3CRelationMetaAnnotation] => {\n  if (isConnectionAnnotation(annotation)) {\n    const { id, bodies, target: { selector: { from, to }} } = annotation;\n\n    const link = { \n      id,\n      motivation: 'linking',\n      body: to,\n      target: from\n    } as W3CRelationLinkAnnotation;\n\n    if (bodies.length > 0) {\n      // Here's a key problem: each annotation needs a stable ID. However, the \"meta annotation\"\n      // does not exist in the internal model. (Meta payload is just stored as bodies.) Therefore,\n      // we're deriving a UUID from the annotation UUID, and use that for the meta annotation.\n      const meta = {\n        id: uuidv5('@annotorious/plugin-connectors', id),\n        motivation: 'tagging',\n        body: bodies.map(b => ({\n          purpose: b.purpose,\n          value: b.value\n        } as W3CAnnotationBody)),\n        target: id\n      } as W3CRelationMetaAnnotation;\n\n      return [link, meta];\n    } else {\n      return link;\n    }\n  } else {\n    return imageAdapter.serialize(annotation)\n  }\n}","/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.19';\nexport const PUBLIC_VERSION = '4';\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","/**\n * Round the values of each command to the given number of decimals.\n * This function modifies the object in place.\n * @param {array} cmds Sequence of commands\n * @param {number} round Number of decimal place to be rounded\n * @returns {array} Sequence of commands with their values rounded\n */\nexport function roundValues(el, round) {\n  Object.keys(el.values).forEach(\n    key =>\n      (el.values[key] =\n        el.values[key] && parseFloat(el.values[key].toFixed(round)))\n  );\n\n  return el;\n}\n\n/**\n * Get previous element in array, wrapping if index is out of bounds and skipping if the command is 'Z'\n * @param {any} e Command object\n * @param {number} i Current index\n * @param {array} a Array being iterated\n * @returns {any} Previous element that doesn't have a 'Z' marker\n */\nexport function getPreviousNoZ(e, i, a) {\n  const counter = i - 1;\n  const previous = a[mod(counter, a.length)];\n\n  if (previous.marker !== 'Z') {\n    return previous;\n  } else {\n    return getPreviousNoZ(e, counter, a);\n  }\n}\n\n/**\n * Get next element in array, wrapping if index is out of bounds and skipping if the command is 'Z'\n * @param {any} e Command object\n * @param {number} i Current index\n * @param {array} a Array being iterated\n * @returns {any} Next element that doesn't have a 'Z' marker\n */\nexport function getNextNoZ(e, i, a) {\n  const counter = i + 1;\n  const next = a[mod(counter, a.length)];\n\n  if (next.marker === 'Z') {\n    return getNextNoZ(e, counter, a);\n  } else {\n    return next;\n  }\n}\n\n/**\n * Iterate through an array and convert all commands to absolute.\n * This function should be used as argument in a map() call.\n * @param {any} el Current element in this iteration\n * @param {number} index Current iteration index\n * @param {array} arr Array being iterated\n */\nexport function convertToAbsolute(el, index, arr) {\n  // get previous item or create one empty if it doesnt exist\n  let prev = arr[index - 1] || { values: { x: 0, y: 0 } };\n\n  // only need to test lowercase (relative) commands\n  if (el.marker === el.marker.toLowerCase()) {\n    // convert all to uppercase\n    el.marker = el.marker.toUpperCase();\n    switch (el.marker) {\n      case 'M': // move to x,y\n        el.values.x += prev.values.x;\n        el.values.y += prev.values.y;\n        break;\n      case 'L': // line to x,y\n      case 'A':\n        el.values.x += prev.values.x;\n        el.values.y += prev.values.y;\n        break;\n      case 'H': // horizontalTo x\n        el.marker = 'L';\n        el.values.x += prev.values.x;\n        el.values.y = prev.values.y;\n        break;\n      case 'V': // verticalTo y\n        el.marker = 'L';\n        el.values.x = prev.values.x;\n        el.values.y += prev.values.y;\n        break;\n      case 'C': // beziér curve x1 y1, x2 y2, x y\n        el.values.x += prev.values.x;\n        el.values.y += prev.values.y;\n        el.values.x1 += prev.values.x;\n        el.values.y1 += prev.values.y;\n        el.values.x2 += prev.values.x;\n        el.values.y2 += prev.values.y;\n        break;\n      case 'S':\n        el.values.x += prev.values.x;\n        el.values.y += prev.values.y;\n        el.values.x2 += prev.values.x;\n        el.values.y2 += prev.values.y;\n        break;\n      case 'Q':\n        el.values.x += prev.values.x;\n        el.values.y += prev.values.y;\n        el.values.x1 += prev.values.x;\n        el.values.y1 += prev.values.y;\n        break;\n      case 'T':\n        el.values.x += prev.values.x;\n        el.values.y += prev.values.y;\n        break;\n      case 'Z':\n        break;\n    }\n    // H/V uppercase need to be converted too. Convert to L and add missing value\n  } else if (el.marker === el.marker.toUpperCase()) {\n    switch (el.marker) {\n      case 'H': // horizontalTo x\n        el.marker = 'L';\n        el.values.y = prev.values.y;\n        break;\n      case 'V': // verticalTo y\n        el.marker = 'L';\n        el.values.x = prev.values.x;\n        break;\n    }\n  }\n\n  /*\n    'Z' commands don't have any coordinate but we are cloning the\n    start coordinates defined by this subpath initial 'M' so it's\n    easier to do the stitching later.\n  */\n  if (el.marker === 'Z') {\n    // find previous 'M' recursively\n    function rec(arr, i) {\n      if (arr[i].marker === 'M') {\n        return arr[i];\n      } else {\n        return rec(arr, i - 1);\n      }\n    }\n    let mBefore = rec(arr, index);\n    el.values.x = mBefore.values.x;\n    el.values.y = mBefore.values.y;\n  }\n\n  return el;\n}\n\n/**\n * Takes one marker and an array of numbers and creates one or more command objects with the right\n * properties based on the given marker. Some markers allow for multiple coordinates for one single command.\n * This function takes care of splitting multiple coordinates per command and generating the\n * @param {string} marker Letter of the command being generated\n * @param {array} values Array of numbers to be splitted and parsed into the right properties\n * @returns {array} Array of commands. Most of the time will have only one item\n */\nexport function newCommands(marker, values) {\n  const cmds = [];\n\n  switch (marker.toUpperCase()) {\n    case 'M': // moveTo x,y\n      for (let i = 0; i < values.length; i += 2) {\n        let m;\n        if (marker === marker.toUpperCase()) {\n          m = i === 0 ? 'M' : 'L';\n        } else {\n          m = i === 0 ? 'm' : 'l';\n        }\n        cmds.push({\n          marker: m,\n          values: {\n            x: values[i],\n            y: values[i + 1]\n          }\n        });\n      }\n      break;\n    case 'L': // lineTo x,y\n      for (let i = 0; i < values.length; i += 2) {\n        cmds.push({\n          marker,\n          values: {\n            x: values[i],\n            y: values[i + 1]\n          }\n        });\n      }\n      break;\n    case 'H': // horizontalTo x\n      for (let i = 0; i < values.length; i++) {\n        cmds.push({\n          marker,\n          values: {\n            x: values[i],\n            y: 0\n          }\n        });\n      }\n      break;\n    case 'V': // verticalTo y\n      for (let i = 0; i < values.length; i++) {\n        cmds.push({\n          marker,\n          values: {\n            x: 0,\n            y: values[i]\n          }\n        });\n      }\n      break;\n    case 'C': // cubic beziér curve x1 y1, x2 y2, x y\n      for (let i = 0; i < values.length; i += 6) {\n        cmds.push({\n          marker,\n          values: {\n            x1: values[i],\n            y1: values[i + 1],\n            x2: values[i + 2],\n            y2: values[i + 3],\n            x: values[i + 4],\n            y: values[i + 5]\n          }\n        });\n      }\n      break;\n    case 'S':\n      for (let i = 0; i < values.length; i += 4) {\n        cmds.push({\n          marker,\n          values: {\n            x2: values[i],\n            y2: values[i + 1],\n            x: values[i + 2],\n            y: values[i + 3]\n          }\n        });\n      }\n      break;\n    case 'Q':\n      for (let i = 0; i < values.length; i += 4) {\n        cmds.push({\n          marker,\n          values: {\n            x1: values[i],\n            y1: values[i + 1],\n            x: values[i + 2],\n            y: values[i + 3]\n          }\n        });\n      }\n      break;\n    case 'T':\n      for (let i = 0; i < values.length; i += 2) {\n        cmds.push({\n          marker,\n          values: {\n            x: values[i],\n            y: values[i + 1]\n          }\n        });\n      }\n      break;\n    case 'A':\n      for (let i = 0; i < values.length; i += 7) {\n        cmds.push({\n          marker,\n          values: {\n            radiusX: values[i],\n            radiusY: values[i + 1],\n            rotation: values[i + 2],\n            largeArc: values[i + 3],\n            sweep: values[i + 4],\n            x: values[i + 5],\n            y: values[i + 6]\n          }\n        });\n      }\n      break;\n    case 'Z':\n      cmds.push({\n        marker,\n        values: {\n          // values will be overriden later by convertToAbsolute()\n          x: 0,\n          y: 0\n        }\n      });\n      break;\n  }\n  return cmds;\n}\n\n/**\n * Takes an index and a length and returns the index wrapped if out of bounds.\n * @param {number} x Index\n * @param {number} m Length\n * @returns {number} Index or wrapped index if out bounds\n */\nexport function mod(x, m) {\n  return ((x % m) + m) % m;\n}\n\n/**\n * Compares the given element with it's predecessor and checks if their end position is the same.\n * If it is, add a boolean 'overlap' property to the element. This function modifies the array elements in place\n * @param {any} el Command object\n * @param {number} index Current iteration index\n * @param {array} array Array being iterated\n * @returns {any} Command object\n */\nexport function markOverlapped(el, index, array) {\n  // Skip the first moveTo command and any other that's not a lineTo.\n  if (index !== 0 && el.marker === 'L') {\n    // It seems we have a lineTo here. Get the immediate previous command\n    let previous = array[index - 1];\n    // …and check if the x, y coordinates are equals.\n    const overlap = ['x', 'y'].every(key => {\n      // If x AND y overlap, this command should be skipped\n      return Math.round(Math.abs(previous.values[key] - el.values[key])) === 0;\n    });\n\n    if (overlap) {\n      el.overlap = true;\n    }\n  }\n\n  return el;\n}\n\n/**\n * Similar purpose as markOverlapped(). Recursively marks trailling commands that have the same end coordinate as the inital 'M'.\n * This function modifies the array in place.\n * @param {array} cmds Commands array\n * @param {number} index Optional start index counting backwards. Usually the last index from the array\n */\nexport function reverseMarkOverlapped(cmds, counter) {\n  const overlap = ['x', 'y'].every(key => {\n    // If x AND y overlap, this command should be skipped\n    return (\n      Math.round(Math.abs(cmds[counter].values[key] - cmds[0].values[key])) ===\n      0\n    );\n  });\n\n  if (cmds[counter].marker === 'L' && overlap) {\n    cmds[counter].overlap = true;\n    reverseMarkOverlapped(cmds, counter - 1);\n  }\n\n  if (cmds[counter].marker === 'Z') {\n    reverseMarkOverlapped(cmds, counter - 1);\n  }\n}\n\n/**\n * Calculates the distance between the current command and\n * it's direct neighbours and returns the nearest distance\n * @param {any} el current command\n * @param {any} previous previous command\n * @param {any} next next command\n * @returns {number} the distance to teh nearest command\n */\nexport function shortestSide(el, previous, next) {\n  const nxtSide = getDistance(el.values, next.values);\n  const prvSide = getDistance(previous.values, el.values);\n  return Math.min(prvSide, nxtSide);\n}\n\n/**\n * Calculates the angle between two points\n * @param {any} p1 Object with x and y properties\n * @param {any} p2 Object with x and y properties\n * @returns {number} Angle in radians\n */\nexport function getAngle(p1, p2) {\n  return Math.atan2(p2.x - p1.x, p2.y - p1.y);\n}\n\n/**\n * Calculates the distance between two points\n * @param {any} p1 Object with x and y properties\n * @param {any} p2 Object with x and y properties\n * @returns {number} Distance between points\n */\nexport function getDistance(p1, p2) {\n  const xDiff = p1.x - p2.x;\n  const yDiff = p1.y - p2.y;\n\n  return Math.sqrt(Math.pow(xDiff, 2) + Math.pow(yDiff, 2));\n}\n\n/**\n * Calculates the length of the opposite side\n * of a given angle using the hypothenuse\n * @param {number} angle Angle in radians\n * @param {number} hip Hypothenuse\n * @returns {number} Length of the opposite side\n */\nexport function getOppositeLength(angle, hip) {\n  return Math.sin(angle) * hip;\n}\n\n/**\n * Calculates the length of the adjacent side\n * of a given angle using the hypothenuse\n * @param {number} angle Angle in radians\n * @param {number} hip Hypothenuse\n * @returns {number} Length of the adjacent side\n */\nexport function getAdjacentLength(angle, hip) {\n  return Math.cos(angle) * hip;\n}\n\n/**\n * Calculates the adjacent side of the given\n * angle using the angle's opposite side\n * @param {number} angle Angle in radians\n * @param {number} opposite opposite side\n * @returns {number} Length of the adjacent side\n */\nexport function getTangentLength(angle, opposite) {\n  const a = opposite / Math.tan(angle);\n  if (a === Infinity || a === -Infinity || isNaN(a)) {\n    return opposite;\n  }\n\n  return a;\n}\n\n/**\n * Calculates the opposite side of the given\n * angle using the angle's adjacent side\n * @param {number} angle Angle in radians\n * @param {number} adjacent adjacent side\n * @returns {number} Length of the opposite side\n */\nexport function getTangentNoHyp(angle, adjacent) {\n  return adjacent * Math.tan(angle);\n}\n\n/**\n * Calculates the length that should be used to shorten the\n * distance between commands based on the given radius value\n * @param {number} angle Angle in radians between points\n * @param {number} r Radius of the arc that should fit inside the triangle\n * @returns {any} Object containing offset and the arc's sweepFlag\n */\nexport function getOffset(angle, r) {\n  let offset;\n  let sweepFlag = 0;\n  let degrees = angle * (180 / Math.PI);\n\n  // sharp angles\n  if ((degrees < 0 && degrees >= -180) || (degrees > 180 && degrees < 360)) {\n    offset = getTangentLength(angle / 2, -r);\n    // obtuse angles\n  } else {\n    offset = getTangentLength(angle / 2, r);\n    sweepFlag = 1;\n    if (offset === Infinity) {\n      offset = r;\n    }\n  }\n\n  return {\n    offset,\n    sweepFlag\n  };\n}\n\n/**\n * Originally taken from: http://bl.ocks.org/balint42/8c9310605df9305c42b3\n * @brief De Casteljau's algorithm splitting n-th degree Bezier curve\n * @returns {array}\n */\nexport function bsplit(points, t0) {\n  const n = points.length - 1; // number of control points\n  const b = []; // coefficients as in De Casteljau's algorithm\n  const res1 = []; // first curve resulting control points\n  const res2 = []; // second curve resulting control points\n  const t1 = 1 - t0;\n\n  // multiply point with scalar factor\n  const pf = function (p, f) {\n    const res = [];\n    for (let i = 0; i < p.length; i++) {\n      res.push(f * p[i]);\n    }\n    return res;\n  };\n  // add points as vectors\n  const pp = function (p1, p2) {\n    const res = [];\n    for (let i = 0; i < Math.min(p1.length, p2.length); i++) {\n      res.push(p1[i] + p2[i]);\n    }\n    return res;\n  };\n\n  // set original coefficients: b[i][0] = points[i]\n  for (let i = 0; i <= n; i++) {\n    points[i] = typeof points[i] == 'object' ? points[i] : [points[i]];\n    b.push([points[i]]);\n  }\n\n  // get all coefficients\n  for (let j = 1; j <= n; j++) {\n    for (let i = 0; i <= n - j; i++) {\n      b[i].push(pp(pf(b[i][j - 1], t1), pf(b[i + 1][j - 1], t0)));\n    }\n  }\n  // set result: res1 & res2\n  for (let j = 0; j <= n; j++) {\n    res1.push(b[0][j]);\n    res2.push(b[j][n - j]);\n  }\n\n  return [res1, res2];\n}\n\n/**\n * Concatenates commands in a string and ensures that each\n * value from each command is printed in the right order\n * @param {array} cmds Array of svg commands\n * @returns {string} String containing all commands formated ready for the 'd' Attribute\n */\nexport function commandsToSvgPath(cmds) {\n  // when writing the commands back, the relevant values should be written in this order\n  const valuesOrder = [\n    'radiusX',\n    'radiusY',\n    'rotation',\n    'largeArc',\n    'sweep',\n    'x1',\n    'y1',\n    'x2',\n    'y2',\n    'x',\n    'y'\n  ];\n\n  return cmds\n    .map(cmd => {\n      // defaults for empty string, so Z will output no values\n      let d = '';\n      // filter any command that's not Z\n      if (cmd.marker !== 'Z') {\n        // get all values from current command\n        const cmdKeys = Object.keys(cmd.values);\n        // filter the valuesOrder array for only the values that appear in the current command.\n        // We do this because valuesOrder guarantees that the relevant values will be in the right order\n        d = valuesOrder\n          .filter(v => cmdKeys.indexOf(v) !== -1)\n          // replace the key with it's value\n          .map(key => cmd.values[key])\n          // and stringify everything together with a comma inbetween values\n          .join();\n      }\n      return `${cmd.marker}${d}`;\n    })\n    .join('')\n    .trim();\n}\n","import {\n  getAngle,\n  getOppositeLength,\n  getAdjacentLength,\n  commandsToSvgPath,\n  markOverlapped,\n  shortestSide,\n  roundValues,\n  getPreviousNoZ,\n  getNextNoZ,\n  reverseMarkOverlapped,\n  getOffset,\n  getTangentNoHyp,\n  newCommands,\n  convertToAbsolute\n} from './utils.js';\n\n/**\n * Parses the given command string and generates an array of parsed commands.\n * This function normalises all relative commands into absolute commands and\n * transforms h, H, v, V to L commands\n * @param {string} str Raw string from 'd' Attribute\n * @returns {array} Array of normalised commands\n */\nfunction parsePath(str) {\n  const markerRegEx = /[MmLlSsQqLlHhVvCcSsQqTtAaZz]/g;\n  const digitRegEx = /-?[0-9]*\\.?\\d+/g;\n\n  return [...str.matchAll(markerRegEx)]\n    .map(match => {\n      return { marker: match[0], index: match.index };\n    })\n    .reduceRight((acc, cur) => {\n      const chunk = str.substring(\n        cur.index,\n        acc.length ? acc[acc.length - 1].index : str.length\n      );\n      return acc.concat([\n        {\n          marker: cur.marker,\n          index: cur.index,\n          chunk: chunk.length > 0 ? chunk.substr(1, chunk.length - 1) : chunk\n        }\n      ]);\n    }, [])\n    .reverse()\n    .flatMap(cmd => {\n      const values = cmd.chunk.match(digitRegEx);\n      const vals = values ? values.map(parseFloat) : [];\n      return newCommands(cmd.marker, vals);\n    })\n    .map(convertToAbsolute);\n}\n\n/**\n * Iterates through an array of normalised commands and insert arcs where applicable.\n * This function modifies the array in place.\n * @param {array} _cmds Array with commands to be modified\n * @param {number} r Expected radius of the arcs.\n * @param {number} round Number of decimal digits to round values\n * @returns {array} Sequence of commands containing arcs in place of corners\n */\nfunction roundCommands(cmds, r, round) {\n  let subpaths = [];\n  let newCmds = [];\n\n  if (round) {\n    cmds.forEach(el => roundValues(el, round));\n    // roundValues(cmds, round);\n  }\n\n  cmds\n    // split sub paths\n    .forEach(e => {\n      if (e.marker === 'M') {\n        subpaths.push([]);\n      }\n      subpaths[subpaths.length - 1].push(e);\n    });\n\n  subpaths.forEach(subPathCmds => {\n    subPathCmds\n      // We are only excluding lineTo commands that may be overlapping\n      .map(markOverlapped);\n\n    reverseMarkOverlapped(subPathCmds, subPathCmds.length - 1);\n\n    // is this an open or closed path? don't add arcs to start/end.\n    const closedPath = subPathCmds[subPathCmds.length - 1].marker == 'Z';\n    subPathCmds\n      .filter(el => !el.overlap)\n      .map((el, i, arr) => {\n        const largeArcFlag = 0;\n        const prev = getPreviousNoZ(el, i, arr);\n        const next = getNextNoZ(el, i, arr);\n        const anglePrv = getAngle(el.values, prev.values);\n        const angleNxt = getAngle(el.values, next.values);\n        const angle = angleNxt - anglePrv; // radians\n        const degrees = angle * (180 / Math.PI);\n        // prevent arc crossing the next command\n        const shortest = shortestSide(el, prev, next);\n        const maxRadius = Math.abs(getTangentNoHyp(angle / 2, shortest / 2));\n        const radius = Math.min(r, maxRadius);\n\n        const o = getOffset(angle, radius);\n        const offset = o.offset;\n        const sweepFlag = o.sweepFlag;\n\n        const openFirstOrLast = (i == 0 || i == arr.length - 1) && !closedPath;\n        switch (el.marker) {\n          case 'M': // moveTo x,y\n          case 'L': // lineTo x,y\n            /* eslint-disable no-case-declarations */\n            const prevPoint = [\n              el.values.x + getOppositeLength(anglePrv, offset),\n              el.values.y + getAdjacentLength(anglePrv, offset)\n            ];\n\n            /* eslint-disable no-case-declarations */\n            const nextPoint = [\n              el.values.x + getOppositeLength(angleNxt, offset),\n              el.values.y + getAdjacentLength(angleNxt, offset)\n            ];\n\n            // there only need be a curve if and only if the next marker is a corner\n            if (!openFirstOrLast) {\n              newCmds.push({\n                marker: el.marker,\n                values: {\n                  x: parseFloat(prevPoint[0].toFixed(3)),\n                  y: parseFloat(prevPoint[1].toFixed(3))\n                }\n              });\n            } else {\n              newCmds.push({\n                marker: el.marker,\n                values: el.values\n              });\n            }\n\n            if (\n              !openFirstOrLast &&\n              (next.marker === 'L' || next.marker === 'M')\n            ) {\n              newCmds.push({\n                marker: 'A',\n                radius: radius,\n                values: {\n                  radiusX: parseFloat(radius.toFixed(3)),\n                  radiusY: parseFloat(radius.toFixed(3)),\n                  rotation: degrees,\n                  largeArc: largeArcFlag,\n                  sweep: sweepFlag,\n                  x: parseFloat(nextPoint[0].toFixed(3)),\n                  y: parseFloat(nextPoint[1].toFixed(3))\n                }\n              });\n            }\n            break;\n          // case 'H': // horizontalTo x. Transformed to L in utils\n          // case 'V': // verticalTo y. Transformed to L in utils\n          case 'C': // cubic beziér: x1 y1, x2 y2, x y\n          case 'S': // short beziér: x2 y2, x y\n          case 'Q': // quadratic beziér: x1 y1, x y\n          case 'T': // short quadratic beziér: x y\n          case 'A': // arc: rx ry x-axis-rotation large-arc-flag sweep-flag x y\n          case 'Z': // close path\n            newCmds.push({ marker: el.marker, values: el.values });\n            break;\n        }\n      });\n  });\n\n  return {\n    path: commandsToSvgPath(newCmds),\n    commands: newCmds\n  };\n}\n\n/**\n * This is a shorthand for parsePath() and roundCommands().\n * You get the end result in one function call.\n * @param {string} str Raw string with commands from the path element\n * @param {number} r Expected radius of the arcs.\n * @param {number} round Number of decimal digits to round values\n * @returns {array} New commands sequence with rounded corners\n */\nfunction roundCorners(str, r, round) {\n  return roundCommands([...parsePath(str)], r, round);\n}\n\nexport { parsePath, roundCommands, roundCorners };\n","import { ShapeType, type ImageAnnotation, type PolygonGeometry } from '@annotorious/annotorious';\nimport { roundCorners } from 'svg-round-corners';\nimport type { \n  Connection, \n  ConnectionHandle, \n  Direction, \n  FloatingConnectionHandle, \n  Path, \n  PinnedConnectionHandle,\n  Point\n} from './model';\n\nconst isFloatingConnectionHandle = (arg: any): arg is FloatingConnectionHandle => \n  arg.point !== undefined && \n  typeof arg.point.x === 'number' && \n  typeof arg.point.y === 'number';\n\nconst invert = (dir: Direction): Direction =>\n  dir === 'E' ? 'W' :\n  dir === 'W' ? 'E' :\n  dir === 'S' ? 'N' :\n  'S';\n\n/** \n * Returns all handles for this image annotation.\n */\nconst getHandles = (annotation: ImageAnnotation): PinnedConnectionHandle[] => {\n  if (annotation.target.selector.type === ShapeType.POLYGON) {\n    const { minX, minY, maxX, maxY } = annotation.target.selector.geometry.bounds;\n\n    const w = maxX - minX;\n    const h = maxY - minY;\n\n    const { points } = (annotation.target.selector.geometry as PolygonGeometry);\n\n    const getClosest = (pt: Point): Point => {\n      const distSq = (xy: number[]) => {\n        const dx = pt.x - xy[0];\n        const dy = pt.y - xy[1];\n        return dx * dx + dy * dy;\n      }\n\n      const sorted = [...points].sort((a, b) => distSq(a) - distSq(b));\n      return { x: sorted[0][0], y: sorted[0][1] };\n    }\n\n    // Use closest point instead of bound middle\n    return [\n      { point: getClosest({ x: minX + w / 2, y: maxY }), annotation, direction: 'N' }, // top\n      { point: getClosest({ x: maxX, y: minY + h / 2 }), annotation, direction: 'E' }, // right\n      { point: getClosest({ x: minX + w / 2, y: minY }), annotation, direction: 'S' }, // bottom\n      { point: getClosest({ x: minX, y: minY + h / 2 }), annotation, direction: 'W' }  // left\n    ];\n  } else {\n    // Rectangles and ellipses\n    const { minX, minY, maxX, maxY } = annotation.target.selector.geometry.bounds;\n\n    const w = maxX - minX;\n    const h = maxY - minY;\n\n    return [\n      { point: { x: minX + w / 2, y: maxY }, annotation, direction: 'N' }, // top\n      { point: { x: maxX, y: minY + h / 2 }, annotation, direction: 'E' }, // right\n      { point: { x: minX + w / 2, y: minY }, annotation, direction: 'S' }, // bottom\n      { point: { x: minX, y: minY + h / 2 }, annotation, direction: 'W' }  // left\n    ];\n  }\n}\n\n/**\n * Enumerate possible I-, L- and S-path layouts between two handles. (Reminder:\n * a handle has an x/y position and a starting direction.)\n */\nconst enumeratePathLayouts = (start: PinnedConnectionHandle, end: ConnectionHandle) => {\n  const dx = end.point.x - start.point.x;\n  const dy = end.point.y - start.point.y;\n\n  const sd = start.direction;\n  const ed = 'direction' in end ? invert(end.direction) : undefined;\n\n  const pathLayouts = [\n    { dx: (dx: number) => dx < 0, dy: (dy: number) => dy > 0,   layouts: ['W-N', 'N-W', 'W-N-W', 'N-W-N']},\n    { dx: (dx: number) => dx < 0, dy: (dy: number) => dy === 0, layouts: ['W']},\n    { dx: (dx: number) => dx < 0, dy: (dy: number) => dy < 0,   layouts: ['W-S', 'S-W', 'W-S-W', 'S-W-S']},\n    { dx: (dx: number) => dx === 0, dy: (dy: number) => dy > 0, layouts: ['N'] },\n    { dx: (dx: number) => dx === 0, dy: (dy: number) => dy < 0, layouts: ['S'] },\n    { dx: (dx: number) => dx > 0, dy: (dy: number) => dy > 0,   layouts: ['E-N', 'N-E', 'E-N-E', 'N-E-N']},\n    { dx: (dx: number) => dx > 0, dy: (dy: number) => dy === 0, layouts: ['E']},\n    { dx: (dx: number) => dx > 0, dy: (dy: number) => dy < 0,   layouts: ['E-S', 'S-E', 'E-S-E', 'S-E-S']}\n  ];\n\n  // Paths that work for this dx/dy combination\n  const potentialLayouts = pathLayouts.filter(row => row.dx(dx) && row.dy(dy));\n\n  // Paths that work for this dx/dy combination and start/end direction\n  return potentialLayouts.reduce<string[]>((all, row) => {\n    const validLayouts = row.layouts.filter(l => \n      (l.startsWith(sd) && (!ed || l.endsWith(ed))) ||\n      // A half-sensible workaround to support intersecting shapes\n      (l.startsWith(invert(sd)) && (!ed || l.endsWith(invert(ed)))));\n    return [...all, ...validLayouts];\n  }, []); \n}\n\n/** \n * Enumerates all possible I-, L- and S-path layouts between all handles on \n * the given image annotations.\n */\nconst enumerateConnections = (source: ImageAnnotation, target: FloatingConnectionHandle | ImageAnnotation) => {\n  const sourceHandles = getHandles(source);\n  const targetHandles: ConnectionHandle[] = isFloatingConnectionHandle(target) ? [target] : getHandles(target);\n\n  const connections: Connection[] = [];\n\n  sourceHandles.forEach(start => {\n    targetHandles.forEach(end => {\n      const layouts = enumeratePathLayouts(start, end);\n      connections.push(...layouts.map(layout => ({ start, layout, end })));\n    });\n  });\n\n  return connections;\n}\n\nexport const getConnection = (source: ImageAnnotation, target: FloatingConnectionHandle | ImageAnnotation) => {\n  const connections = enumerateConnections(source, target);\n\n  connections.sort((a, b) => {\n    const lengthA = getLength(a);\n    const lengthB = getLength(b);\n\n    if (lengthA !== lengthB)\n      return lengthA - lengthB;\n\n    return countCorners(a) - countCorners(b);\n  });\n\n  return connections[0];\n}\n\nconst countCorners = (connection: Connection) => \n  connection.layout.split('-').length - 1;\n\nconst getLength = (connection: Connection) => {\n  const dx = connection.end.point.x - connection.start.point.x;\n  const dy = connection.end.point.y - connection.start.point.y;\n  return Math.abs(dx) + Math.abs(dy);\n}\n\nexport const computePath = (connection: Connection, r?: number): Path => {\n  const segments = connection.layout.split('-') as Direction[];\n\n  const isS = segments.length === 3;\n\n  const dx = connection.end.point.x - connection.start.point.x;\n  const dy = connection.end.point.y - connection.start.point.y;\n\n  const d = segments.reduce<string>((d, direction, idx) => {\n    let delta: number;\n\n    switch (direction) {\n      case 'N': \n      case 'S':\n        delta = (!isS || idx === 1) ? dy : dy / 2;\n        return `${d} v ${delta}`;\n\n      case 'E': \n      case 'W':\n        delta = (!isS || idx === 1) ? dx : dx / 2;\n        return `${d} h ${delta}`;\n    }\n  }, `M ${connection.start.point.x} ${connection.start.point.y}`);\n\n  const rounded = r !== undefined && r > 0 ? roundCorners(d, r).path : d;\n\n  return { start: connection.start.point, end: connection.end.point, d: rounded };\n}\n","<script lang=\"ts\">\n  import type { ImageAnnotation, EllipseGeometry } from '@annotorious/annotorious';\n\n  export let annotation: ImageAnnotation;\n\n  $: ({ cx, cy, rx, ry } = annotation.target.selector.geometry as EllipseGeometry);\n</script>\n\n<g class=\"a9s-annotation-emphasis\" data-id={annotation.id}>\n  <ellipse\n    cx={cx} \n    cy={cy} \n    rx={rx} \n    ry={ry} />\n</g>\n\n","<script lang=\"ts\">\n  import type { ImageAnnotation, PolygonGeometry } from '@annotorious/annotorious';\n\n  export let annotation: ImageAnnotation;\n\n  $: ({ points } = annotation.target.selector.geometry as PolygonGeometry);\n</script>\n\n<g class=\"a9s-annotation-emphasis\" data-id={annotation.id}>\n  <polygon\n    points={points.map(xy => xy.join(',')).join(' ')}  />\n</g>\n\n","<script lang=\"ts\">\n  import type { ImageAnnotation, RectangleGeometry } from '@annotorious/annotorious';\n\n  export let annotation: ImageAnnotation;\n\n  $: ({ x, y, w, h } = annotation.target.selector.geometry as RectangleGeometry);\n</script>\n\n<g class=\"a9s-annotation-emphasis\" data-id={annotation.id}>\n  <rect\n    x={x} \n    y={y} \n    width={w} \n    height={h} />\n</g>\n\n","<script lang=\"ts\">\n  import { ShapeType } from '@annotorious/annotorious';\n  import Ellipse from './EmphasisEllipse.svelte';\n  import Polygon from './EmphasisPolygon.svelte';\n  import Rectangle from './EmphasisRectangle.svelte';\n\n  export let annotation;\n</script>\n\n{#if (annotation.target.selector.type === ShapeType.ELLIPSE)}\n  <Ellipse annotation={annotation} />\n{:else if (annotation.target.selector.type === ShapeType.RECTANGLE)}\n  <Rectangle annotation={annotation} />\n{:else if (annotation.target.selector.type === ShapeType.POLYGON)}\n  <Polygon annotation={annotation} />\n{/if}\n\n<style>\n  :global(.a9s-annotation-emphasis :is(ellipse, polygon, rect)) {\n    fill: transparent;\n    stroke: #cc23cc;\n    stroke-width: 2px;\n    vector-effect: non-scaling-stroke;\n  }\n</style>","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import type { ImageAnnotation, ImageAnnotatorState } from '@annotorious/annotorious';\n  import { computePath, getConnection } from '../../layout';\n  import type { Connection, ConnectionAnnotation } from 'src/model';\n\n  /** Props */\n  export let annotation: ConnectionAnnotation;\n  export let state: ImageAnnotatorState<ImageAnnotation>;\n  export let isSelected: boolean;\n  export let scale: number;\n\n  export const getMidpoint = () => midPoint ? { x: midPoint.x, y: midPoint.y } : undefined;\n\n  let pathElement: SVGPathElement;\n\n  const { selection, store } = state;\n\n  $: r = 5 / scale;\n  \n  $: connection = computeConnection(annotation);\n\n  $: midPoint = connection && computeMidPoint(pathElement, connection);\n\n  const computeConnection = (annotation: ConnectionAnnotation) => {\n    const from = store.getAnnotation(annotation.target.selector.from);\n    const to = store.getAnnotation(annotation.target.selector.to);\n\n    // Note that annotations might have been deleted meanwhile!\n    if (from && to) \n      return getConnection(\n        store.getAnnotation(annotation.target.selector.from)!, \n        store.getAnnotation(annotation.target.selector.to)!);\n  }\n\n  const computeMidPoint = (el: SVGPathElement, connection: Connection) => {\n    if (el && connection) {\n      const length = el.getTotalLength();\n      return el.getPointAtLength(length / 2);\n    }\n  }\n\n  const onPointerDown = (evt: PointerEvent) => {\n    // Stop the event, so the underlying annotation canvas\n    // doesn't register an empty click, and de-selects.\n    evt.stopImmediatePropagation();\n    evt.preventDefault();\n\n    selection.userSelect(annotation.id, evt);\n  }\n\n  onMount(() => {\n    const onChange = () => connection = computeConnection(annotation);\n\n    // Observe changes to start- and end-annotation\n    const { from , to } = annotation.target.selector;\n    store.observe(onChange, { annotations: [from, to]});\n\n    return () => {\n      store.unobserve(onChange);\n    }\n  });\n</script>\n\n<g \n  class=\"a9s-connector\"\n  class:selected={isSelected}>\n  {#if connection}\n    {@const path = computePath(connection, 10)}\n\n    <path \n      bind:this={pathElement}\n      class=\"a9s-connector-path-buffer\"\n\n      d={path.d} \n      on:pointerdown={onPointerDown} />\n\n    <path class=\"a9s-connector-path-outer\" d={path.d} />  \n    <path class=\"a9s-connector-path-inner\" d={path.d} />\n\n    <circle class=\"a9s-connector-handle-outer\" cx={path.start.x} cy={path.start.y} r={r} />\n    <circle class=\"a9s-connector-handle-inner\" cx={path.start.x} cy={path.start.y} r={r} />\n\n    <circle class=\"a9s-connector-handle-outer\" cx={path.end.x} cy={path.end.y} r={r} />\n    <circle class=\"a9s-connector-handle-inner\" cx={path.end.x} cy={path.end.y} r={r} />\n  {/if}\n</g>\n\n<style>\n  .a9s-connector path {\n    fill: transparent;\n    stroke-linecap: round;\n    stroke-linejoin: round;\n    vector-effect: non-scaling-stroke;\n  }\n\n  path.a9s-connector-path-buffer {\n    cursor: pointer;\n    pointer-events: all;\n    stroke: rgba(255, 255, 255, 0);\n    stroke-width: 8px;\n    transition: stroke 125ms ease-in-out;\n  }\n\n  .selected path.a9s-connector-path-buffer {\n    stroke: rgba(255, 255, 255, 0.5);\n  }\n\n  path.a9s-connector-path-buffer:hover:not(.selected) {\n    stroke: rgba(255, 255, 255, 0.25);\n  }\n\n  path.a9s-connector-path-outer {\n    pointer-events: none;\n    stroke: #00000040;\n    stroke-width: 3.5px;\n  }\n\n  path.a9s-connector-path-inner {\n    pointer-events: none;\n    stroke: #fff;\n    stroke-width: 1.5px;\n    stroke-dasharray: 3 3;\n  }\n\n  circle.a9s-connector-handle-outer {\n    fill: #00000040;\n    stroke: #00000040;\n    stroke-width: 3;\n    vector-effect: non-scaling-stroke;\n  }\n\n  circle.a9s-connector-handle-inner {\n    fill: #000;\n    stroke: #fff;\n    stroke-width: 1.5;\n    vector-effect: non-scaling-stroke;\n  }\n</style>","<script lang=\"ts\">\n  import { computePath } from '../../layout';\n  import type { Connection } from 'src/model/Connection';\n\n  export let connection: Connection;\n  export let scale = 1;\n\n  $: r = 5 / scale;\n\n  $: path = computePath(connection, 10);\n</script>\n\n<g class=\"a9s-connector\">\n  {#if path}\n    <path class=\"a9s-connector-path-outer\" d={path.d} />  \n    <path class=\"a9s-connector-path-inner\" d={path.d} />\n\n    <circle class=\"a9s-connector-handle-outer\" cx={path.start.x} cy={path.start.y} r={r} />\n    <circle class=\"a9s-connector-handle-inner\" cx={path.start.x} cy={path.start.y} r={r} />\n\n    <circle class=\"a9s-connector-handle-outer\" cx={path.end.x} cy={path.end.y} r={r} />\n    <circle class=\"a9s-connector-handle-inner\" cx={path.end.x} cy={path.end.y} r={r} />\n  {/if}\n</g>\n\n<style>\n  .a9s-connector path {\n    fill: transparent;\n    stroke-linecap: round;\n    stroke-linejoin: round;\n    vector-effect: non-scaling-stroke;\n  }\n\n  path.a9s-connector-path-outer {\n    stroke: #ffffff40;\n    stroke-width: 2.5px;\n  }\n\n  path.a9s-connector-path-inner {\n    stroke: #cc23cc;\n    stroke-width: 2.5px;\n    stroke-dasharray: 3 3;\n  }\n\n  circle.a9s-connector-handle-outer {\n    fill: #ffffff40;\n    stroke: #ffffff40;\n    stroke-width: 3;\n    vector-effect: non-scaling-stroke;\n  }\n\n  circle.a9s-connector-handle-inner {\n    fill: #fff;\n    stroke: #cc23cc;\n    stroke-width: 2;\n    vector-effect: non-scaling-stroke;\n  }\n</style>","<script lang=\"ts\">\n  import { createEventDispatcher, onMount } from 'svelte';\n  import { v4 as uuidv4 } from 'uuid';\n  import { getSVGPoint } from '@annotorious/annotorious';\n  import type { Annotation, ImageAnnotation, ImageAnnotatorState, StoreChangeEvent } from '@annotorious/annotorious';\n  import { getConnection } from '../../layout';\n  import { isConnectionAnnotation, type Connection, type ConnectionAnnotation, type ConnectionHandle, type PinnedConnectionHandle, type Point } from '../../model';\n  import type { ConnectionGraph } from '../../state';\n  import { Emphasis } from './emphasis';\n  import Connector from './Connector.svelte';\n  import RubberbandConnector from './RubberbandConnector.svelte';\n\n  const dispatch = createEventDispatcher<{ create: ConnectionAnnotation }>();\n\n  /** Props */\n  export let enabled: boolean;\n  export let graph: ConnectionGraph;\n  export let layerTransform: string | undefined = undefined;\n  export let pointerTransform: ((point: Point) => Point) | undefined = undefined;\n  export let scale = 1;\n  export let state: ImageAnnotatorState<ImageAnnotation>;\n\n  let source: ImageAnnotation | undefined;\n\n  let hovered: ImageAnnotation | undefined;\n\n  let connections: ConnectionAnnotation[] = [];\n\n  let connectionRefs: { [key: string]: Connector } = {};\n\n  let floatingConnection: Connection | undefined;\n\n  $: if (!enabled) source = undefined;\n\n  $: if (!source) floatingConnection = undefined;\n\n  let svgEl: SVGSVGElement;\n\n  const { selection, store } = state;\n\n  export const getMidpoint = (id: string) => {\n    const component = connectionRefs[id];\n    if (component)\n      return component.getMidpoint();\n  }\n\n  const isPinned = (handle?: ConnectionHandle): handle is PinnedConnectionHandle => \n    handle !== undefined && 'direction' in handle;\n\n  const onPointerDown = (evt: PointerEvent) => {\n    selection.clear();\n\n    if (!source && hovered) {\n      source = hovered;\n    } else if (isPinned(floatingConnection?.end)) {\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      const from = floatingConnection.start.annotation.id;\n      const to = floatingConnection.end.annotation.id;\n\n      const id = uuidv4();\n\n      const annotation: ConnectionAnnotation = {\n        id,\n        motivation: 'linking',\n        bodies: [],\n        target: {\n          annotation: id,\n          selector: { from, to }\n        }\n      }\n\n      // @ts-ignore\n      store.addAnnotation(annotation);\n\n      source = undefined;\n\n      dispatch('create', annotation);\n\n      selection.setSelected(annotation.id);\n    } else if (source) {\n      source = undefined;\n    }\n  }\n\n  const onPointerMove = (evt: PointerEvent) => {\n    const pt: Point = pointerTransform \n        ? pointerTransform({ x: evt.offsetX, y: evt.offsetY })\n        : getSVGPoint(evt, svgEl);\n\n    const h = store.getAt(pt.x, pt.y);\n\n    if (source) {\n      // Source defined - pick target\n      if (h && !graph.isConnected(source.id, h.id)) {\n        // A target shape that's not yet connected - pin the\n        // connection and hover emphasise the target shape\n        floatingConnection = getConnection(source, h);\n        hovered = h;\n      } else {\n        // No hovered shape, or already connected\n        floatingConnection = getConnection(source, { point: pt });\n        hovered = undefined;\n      }\n    } else {\n      // No source shape - hover the current, if any\n      hovered = h;\n    }\n  }\n\n  onMount(() => {\n    const onChange = (event: StoreChangeEvent<Annotation>) => {\n      const { created, deleted } = event.changes;\n\n\n      const addedConnections = \n        (created || []).filter(isConnectionAnnotation);\n\n      const deletedIds =\n        new Set((deleted || []).filter(isConnectionAnnotation).map(c => c.id));\n\n      connections = [...connections, ...addedConnections].filter(c => !deletedIds.has(c.id));\n    }\n\n    store.observe(onChange);\n\n    return () => {\n      store.unobserve(onChange);\n    }\n  });\n\n  // Shorthand\n  $: isSelected = (id: string) => $selection.selected.some(s => s.id === id);\n</script>\n\n<svg \n  bind:this={svgEl}\n  class=\"a9s-connector-layer\"\n  class:enabled={enabled}\n  class:hover={hovered}\n  on:pointermove={onPointerMove}\n  on:pointerdown={onPointerDown}>\n  <g class=\"a9s-connectors-layer\" transform={layerTransform}>\n    <g class=\"a9s-connectors-shape-emphasis\">\n      {#if enabled}\n        {#if source}\n          <Emphasis annotation={source} />\n        {/if}\n\n        {#if hovered && hovered !== source}\n          <Emphasis annotation={hovered} />\n        {/if}\n      {/if}\n\n      {#if floatingConnection?.end && 'annotation' in floatingConnection.end}\n        <Emphasis annotation={floatingConnection.end.annotation} />\n      {/if}\n    </g>\n\n    <g class=\"a9s-connectors\">\n      {#each connections as connection}\n        <Connector\n          bind:this={connectionRefs[connection.id]}\n          annotation={connection}\n          scale={scale}\n          state={state} \n          isSelected={isSelected(connection.id)}/>\n      {/each}\n    </g>\n\n    {#if floatingConnection}\n      <g class=\"a9s-floating\">\n        <RubberbandConnector \n          connection={floatingConnection} \n          scale={scale} />\n      </g>\n    {/if}\n  </g>\n</svg>\n\n<style>\n  svg {\n    height: 100%;\n    left: 0px;\n    position: absolute;\n    top: 0px;\n    pointer-events: none;\n    width: 100%;\n  }\n\n  svg.enabled {\n    pointer-events: all;\n  }\n\n  svg.hover {\n    cursor: pointer;\n  }\n</style>\n","import type { StoreChangeEvent } from '@annotorious/core';\nimport { isImageAnnotation } from '@annotorious/annotorious';\nimport type { Annotation, Store } from '@annotorious/annotorious';\nimport { isConnectionAnnotation } from '../model';\n\ninterface Link {\n\n  id: string;\n\n  from: string;\n\n  to: string;\n\n}\n\nexport type ConnectionGraph = ReturnType<typeof createConnectionGraph>;\n\nexport const createConnectionGraph = <T extends Annotation>(store: Store<T>) => {\n\n  let links: Link[] = [];\n\n  const onCreateAnnotation = (a: T) => {\n    if (isConnectionAnnotation(a)) {\n      // Keep track of new connections\n      const { from, to } = a.target.selector;\n      links = [...links, { id: a.id, from, to }];\n    }\n  }\n\n  const onDeleteAnnotation = (a: T) => {\n    if (isConnectionAnnotation(a)) {\n      // Keep track of deleted connections\n      const { from, to } = a.target.selector;\n      links = links.filter(l => l.from !== from && l.to !== to);\n    } else if (isImageAnnotation(a)) {\n      // Keep track of deleted image annotations & delete connected links\n      const connected = links.filter(l => l.from === a.id || l.to === a.id);\n      if (connected.length > 0)\n        store.bulkDeleteAnnotation(connected.map(c => c.id))\n    }\n  }\n\n  const isConnected = (fromId: string, toId: string) => {\n    return links.some(l => (\n      (l.from === fromId && l.to === toId) ||\n      (l.from === toId && l.to === fromId)\n    ))\n  }\n\n  const storeObserver = (event: StoreChangeEvent<T>) => {\n    const { created, deleted } = event.changes;\n\n    (created || []).map(onCreateAnnotation);\n    (deleted || []).map(onDeleteAnnotation);\n  }\n\n  store.observe(storeObserver);\n\n  const destroy = () => {\n    store.unobserve(storeObserver);\n  }\n\n  return {\n    destroy,\n    isConnected\n  }\n\n}","import type { ImageAnnotation, ImageAnnotator, ImageAnnotatorState } from '@annotorious/annotorious';\nimport type { Point } from './model';\nimport { ConnectorLayer } from './components/ConnectorLayer';\nimport { createConnectionGraph } from './state';\n\nexport interface ConnectorPluginInstance {\n\n  getMidpoint(id: string): Point | undefined;\n\n  setEnabled(enabled: boolean): void;\n\n  unmount(): void;\n\n}\n\nexport const mountPlugin = (anno: ImageAnnotator<ImageAnnotation>): ConnectorPluginInstance => {\n\n  let isEnabled = false;\n\n  const graph = createConnectionGraph(anno.state.store);\n\n  const connectorLayer = new ConnectorLayer({\n    target: anno.element,\n    props: {\n      enabled: isEnabled,\n      graph,\n      state: anno.state as ImageAnnotatorState<ImageAnnotation>\n    }\n  });\n\n  /** API **/\n\n  const getMidpoint = (id: string) =>\n    connectorLayer.getMidpoint(id);\n\n  const setEnabled = (enabled: boolean) => {\n    isEnabled = enabled;\n    connectorLayer.$set({ enabled: isEnabled });\n  }\n\n  const unmount = () => {\n    graph.destroy();\n  }\n\n  return { \n    getMidpoint,\n    setEnabled,\n    unmount\n  }\n\n}","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import OpenSeadragon from 'openseadragon';\n    \n  export let viewer: OpenSeadragon.Viewer;\n\n  // Current layer scale\n  let scale = 1;\n\n  // CSS layer transform\n  let layerTransform: string;\n\n  const onUpdateViewport = () => {\n    const containerWidth = viewer.viewport.getContainerSize().x;\n\n    const zoom = viewer.viewport.getZoom(true);\n    const flipped = viewer.viewport.getFlip();\n\n    const p = viewer.viewport.pixelFromPoint(new OpenSeadragon.Point(0, 0), true);\n    if (flipped)\n      p.x = containerWidth - p.x;\n    \n    const scaleY = zoom * containerWidth / viewer.world.getContentFactor();\n    const scaleX = flipped ? - scaleY : scaleY;\n\n    // @ts-ignore note: getRotation(true <- realtime value) only since OSD 4!\n    const rotation = viewer.viewport.getRotation(true);\n\n    layerTransform = `translate(${p.x}, ${p.y}) scale(${scaleX}, ${scaleY}) rotate(${rotation})`;\n\n    scale = zoom * containerWidth / viewer.world.getContentFactor();\n  }\n\n  onMount(() => {\n    viewer.addHandler('update-viewport', onUpdateViewport);\n\n    return () => {\n      viewer.removeHandler('update-viewport', onUpdateViewport);\n    }\n  });\n</script>\n\n<slot transform={layerTransform} scale={scale} />","<script lang=\"ts\">\n  import OpenSeadragon from 'openseadragon';\n  import type { ImageAnnotatorState } from '@annotorious/annotorious';\n  import type { ImageAnnotation } from '@annotorious/openseadragon';\n  import { ConnectorLayer } from '../ConnectorLayer';\n  import OSDSVGLayer from './OSDSVGLayer.svelte';\n  import type { Point } from '../../model';\n  import type { ConnectionGraph } from '../../state';\n\n  /** Props **/\n  export let enabled: boolean;\n  export let graph: ConnectionGraph;\n  export let state: ImageAnnotatorState<ImageAnnotation>;\n  export let viewer: OpenSeadragon.Viewer;\n\n  let connectorLayer: ConnectorLayer;\n\n  export const getMidpoint = (id: string) => connectorLayer.getMidpoint(id);\n\n  const pointerTransform = (point: Point): Point => {\n    const {x, y} = viewer.viewport.viewerElementToImageCoordinates(new OpenSeadragon.Point(point.x, point.y));\n    return { x, y };\n  }\n</script>\n\n<OSDSVGLayer \n  viewer={viewer} \n  let:transform \n  let:scale>\n\n  <ConnectorLayer \n    bind:this={connectorLayer}\n    enabled={enabled}\n    graph={graph}\n    scale={scale}\n    state={state} \n    layerTransform={transform} \n    pointerTransform={pointerTransform}\n    on:create />\n</OSDSVGLayer>","import type OpenSeadragon from 'openseadragon';\nimport type { ImageAnnotation, ImageAnnotator, ImageAnnotatorState } from '@annotorious/annotorious';\nimport { UserSelectAction } from '@annotorious/openseadragon';\nimport type { ConnectorPluginInstance } from './connectorsPlugin';\nimport { OSDConnectorLayer } from './components/OSDConnectorLayer';\nimport { createConnectionGraph } from './state';\n\nexport const mountOSDPlugin = (\n  anno: ImageAnnotator<ImageAnnotation>, \n  viewer: OpenSeadragon.Viewer\n): ConnectorPluginInstance  => {\n\n  const graph = createConnectionGraph(anno.state.store);\n\n  let isEnabled = false;\n\n  const connectorLayer = new OSDConnectorLayer({\n    target: viewer.element.querySelector('.openseadragon-canvas')!,\n    props: {\n      enabled: isEnabled,\n      graph,\n      state: anno.state as ImageAnnotatorState<ImageAnnotation>,\n      viewer\n    }\n  });\n\n  /** API **/\n\n  const getMidpoint = (id: string) =>\n    connectorLayer.getMidpoint(id);\n\n  const setEnabled = (enabled: boolean) => {\n    isEnabled = enabled;\n\n    connectorLayer.$set({ enabled: isEnabled });\n\n    // TODO this should actually revert to the last\n    // action set by the host application. (But how?)\n    if (enabled)\n      anno.setUserSelectAction(UserSelectAction.SELECT);\n    else \n      anno.setUserSelectAction(UserSelectAction.EDIT);\n  }\n\n  const unmount = () => {\n    graph.destroy();\n  }\n\n  return { \n    getMidpoint,\n    setEnabled,\n    unmount\n  }\n\n}"],"names":["isW3CRelationLinkAnnotation","arg","isW3CRelationMetaAnnotation","REGEX","validate","uuid","parse","v","byteToHex","i","unsafeStringify","arr","offset","getRandomValues","rnds8","rng","stringToBytes","str","bytes","DNS","URL","v35","version","hash","value","namespace","buf","valueBytes","namespaceBytes","randomUUID","native","v4","options","rnds","_a","f","s","x","y","z","ROTL","n","sha1","K","H","newBytes","l","N","M","j","W","t","a","b","c","d","e","T","v5","isConnectionAnnotation","annotation","W3CImageRelationFormat","source","opts","imageAdapter","W3CImageFormat","serialized","parseW3C","metaAnnotations","otherAnnotations","pair","link","meta","result","next","parsed","error","serializeW3C","parseConnection","id","body","target","bodies","from","to","uuidv5","noop","assign","tar","src","k","run","fn","blank_object","run_all","fns","is_function","thing","safe_not_equal","is_empty","obj","subscribe","store","callbacks","callback","unsub","component_subscribe","component","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","get_slot_changes","dirty","lets","merged","len","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","get_all_dirty_from_scope","length","append","node","insert","anchor","detach","destroy_each","iterations","detaching","svg_element","name","text","data","empty","listen","event","handler","attr","attribute","children","element","toggle_class","toggle","custom_event","type","detail","bubbles","cancelable","current_component","set_current_component","get_current_component","onMount","createEventDispatcher","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","add_render_callback","seen_callbacks","flushidx","saved_component","update","$$","flush_render_callbacks","filtered","targets","outroing","outros","group_outros","check_outros","transition_in","block","local","transition_out","ensure_array_like","array_like_or_iterator","create_component","mount_component","fragment","after_update","new_on_destroy","destroy_component","make_dirty","init","instance","create_fragment","not_equal","props","append_styles","parent_component","ready","ret","rest","nodes","SvelteComponent","__publicField","index","PUBLIC_VERSION","getPreviousNoZ","counter","previous","mod","getNextNoZ","convertToAbsolute","el","prev","rec","mBefore","newCommands","marker","values","cmds","m","markOverlapped","array","key","reverseMarkOverlapped","overlap","shortestSide","nxtSide","getDistance","prvSide","getAngle","p1","p2","xDiff","yDiff","getOppositeLength","angle","hip","getAdjacentLength","getTangentLength","opposite","getTangentNoHyp","adjacent","getOffset","r","sweepFlag","degrees","commandsToSvgPath","valuesOrder","cmd","cmdKeys","parsePath","markerRegEx","digitRegEx","match","acc","cur","chunk","vals","roundCommands","round","subpaths","newCmds","subPathCmds","closedPath","anglePrv","angleNxt","shortest","maxRadius","radius","o","openFirstOrLast","prevPoint","nextPoint","roundCorners","isFloatingConnectionHandle","invert","dir","getHandles","ShapeType","minX","minY","maxX","maxY","w","h","points","getClosest","pt","distSq","xy","dx","dy","sorted","enumeratePathLayouts","start","end","sd","ed","row","all","validLayouts","enumerateConnections","sourceHandles","targetHandles","connections","layouts","layout","getConnection","lengthA","getLength","lengthB","countCorners","connection","computePath","segments","isS","direction","idx","delta","rounded","g","g_data_id_value","ellipse","$$props","$$invalidate","cx","cy","rx","ry","polygon","polygon_points_value","func","rect","child_ctx","path0","path0_d_value","path1","path1_d_value","path2","path2_d_value","circle0","circle1","circle2","circle3","create_if_block","get_if_ctx","state","isSelected","scale","getMidpoint","midPoint","pathElement","selection","computeConnection","computeMidPoint","onPointerDown","evt","onChange","$$value","path","create_if_block_4","create_if_block_3","create_if_block_2","if_block1","create_if_block_1","svg","g2","g0","g1","each_blocks","dispatch","enabled","graph","layerTransform","pointerTransform","hovered","connectionRefs","floatingConnection","svgEl","isPinned","handle","uuidv4","onPointerMove","getSVGPoint","created","deleted","addedConnections","deletedIds","$selection","createConnectionGraph","links","onCreateAnnotation","onDeleteAnnotation","isImageAnnotation","connected","isConnected","fromId","toId","storeObserver","mountPlugin","anno","isEnabled","connectorLayer","ConnectorLayer","viewer","onUpdateViewport","containerWidth","zoom","flipped","p","OpenSeadragon","scaleY","scaleX","rotation","point","mountOSDPlugin","OSDConnectorLayer","UserSelectAction"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,19,20,21,22,23]}